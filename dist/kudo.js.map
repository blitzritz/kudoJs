{"version":3,"file":"kudo.js","sources":["../src/functions/helpers.ts","../src/data-types/either.ts","../src/data-types/maybe.ts","../src/data-types/task-type.ts","../src/data-types/task.ts","../src/index.ts"],"sourcesContent":["import Functor from \"../implements/functor\";\nimport PatternMatch from \"../implements/patternmatch\";\nimport Monad from \"../implements/monad\";\nimport { Applicative, Apply, BiFunctor } from \"../interfaces\";\n\nconst slice = Array.prototype.slice;\n\n//throwError :: String -> Error\nconst throwError = (x: String): Error => {\n    throw x;\n};\n\n//id :: a -> a\nconst id = (x: any): any => x;\n\n//isFunction :: Function -> boolean\nconst isFunction = (f: any) => typeof f === \"function\";\n\n//once :: Function -> Function\nconst once = (f: Function) => {\n    if(!isFunction(f)) throwError(\"Function not provided\");\n    let _called = false;\n    let _result: any = undefined;\n\n    return (...args: Array<any>) => {\n        if(!_called){\n            _called = true;\n            _result = f.apply(null, args);\n        }\n        return _result;\n    }\n}\n//curry :: Function -> Function\nconst curry = (fn: Function): Function => {\n    if (!isFunction(fn)) throwError(\"Function not provided\");\n\n    const arity = fn.length;\n    return function curried() {\n        let args = slice.call(arguments, 0);\n        if (args.length >= arity) return fn.apply(null, args);\n\n        return function() {\n            return curried.apply(null, args.concat(slice.call(arguments)));\n        };\n    };\n};\n\n//ncurry :: Function -> Function\nconst ncurry = (fn: Function, args: Array<string>): Function => {\n    if (!isFunction(fn)) throwError(\"Function not provided\");\n    if (fn.length > 1) throwError(\"Function Arity cannot be greater than 1\");\n    //if (typeof fn.arguments[0] !== \"object\") return throwError(\"Function argument must be an object type\");\n    //const args = Object.keys(fn.arguments[0]);\n\n    return function curried(ar: Object): Function {\n        const curArgs = Object.keys(ar);\n        const diff = args.filter(x => curArgs.indexOf(x) < 0);\n        if (diff.length > 0)\n            return (ar2: Object): Function =>\n                curried.call(null, (<any>Object).assign({}, ar, ar2));\n        return fn.call(null, ar);\n    };\n};\n\n//compose :: Array<Function> -> Function\nconst compose = (...fns: Array<Function>): Function => {\n    if(fns.length <= 0) throwError(\"Nothing to compose!\");\n    return fns.reduce((f, g) => (...args: Array<any>) => f(g(...args)));\n}\n    \n\n//fmap :: Functor f  => (a -> b) -> f a -> f b\nconst _fmap = (fn: Function, f: Functor): Functor => {\n    if(!isFunction(fn)) throwError(\"function not provided\");\n    if(!f.map) throwError(\"Functor not found\");\n    return f.map.call(f, fn);\n}\nconst fmap = curry(_fmap);\n\n//bimap :: BiFunctor b => b a c ~> (a -> e) -> (c -> d) ->  b a c -> b e d  \nconst _bimap = (f1: Function, f2: Function, b: BiFunctor): BiFunctor => {\n    if(!isFunction(f1) || !isFunction(f2)) throwError(\"Functions not provided\");\n    if(!b.bimap) throwError(\"BiFunctor not found\");\n    return b.bimap(f1, f2);\n}\nconst bimap = curry(_bimap);\n\n//chain :: Monad m => m a -> (a -> m b) -> m b\nconst _chain = (m: Monad, f: Function): Monad =>{\n    if(!m.chain) throwError(\"chain not implemented\");\n    if(!isFunction(f)) throwError(\"function not provided\");\n    return m.chain.call(m, f);\n}\nconst chain = curry(_chain);\n\n//caseOf :: Object -> patternMatch -> a\nconst _caseOf = (o: Object, p: PatternMatch): any =>\n    !p.caseOf ? throwError(\"caseOf not implemented\") : p.caseOf.call(null, o);\nconst caseOf = curry(_caseOf);\n\n//liftAn :: Apply a => f -> Array<a> -> a \nconst _liftAn = (f: Function, fn: Array<Apply>) => {\n    if (!isFunction(f)) throwError(\"Function not found\");\n    if (fn.length <= 0) throwError(\"No Apply found!\");\n    const init: Apply = fn[0].map(f);\n    let res = init;\n    if (fn.length > 1) {\n        const rest = fn.slice(1);\n        res = rest.reduce((a: Apply, ca: Apply) => a.ap(ca), init);\n    }\n    return res;\n};\nconst _liftA1 = (f: Function, f1: Apply) => _liftAn(f, [f1]);\nconst _liftA2 = (f: Function, f1: Apply, f2: Apply) => _liftAn(f, [f1, f2]);\nconst _liftA3 = (f: Function, f1: Apply, f2: Apply, f3: Apply) =>\n    _liftAn(f, [f1, f2, f3]);\nconst _liftA4 = (f: Function, f1: Apply, f2: Apply, f3: Apply, f4: Apply) =>\n    _liftAn(f, [f1, f2, f3, f4]);\nconst _liftA5 = (\n    f: Function,\n    f1: Apply,\n    f2: Apply,\n    f3: Apply,\n    f4: Apply,\n    f5: Apply\n) => _liftAn(f, [f1, f2, f3, f4, f5]);\nconst liftAn = curry(_liftAn);\nconst liftA1 = curry(_liftA1);\nconst liftA2 = curry(_liftA2);\nconst liftA3 = curry(_liftA3);\nconst liftA4 = curry(_liftA4);\nconst liftA5 = curry(_liftA5);\n\nexport {\n    id,\n    isFunction,\n    throwError,\n    once,\n    fmap,\n    bimap,\n    caseOf,\n    curry,\n    ncurry,\n    compose,\n    liftAn,\n    liftA1,\n    liftA2,\n    liftA3,\n    liftA4,\n    liftA5\n};\n","import {Setoid, Monad, PatternMatch, BiFunctor} from \"../interfaces\";\nimport {throwError, isFunction} from \"../functions/helpers\";\n\nconst _lefts = new WeakMap();\nclass Left implements Setoid, BiFunctor, Monad, PatternMatch {\n\n    constructor(v: any){\n        _lefts.set(this, v);\n    }\n\n    equals(n: any){\n       return n.isLeft && n.isLeft() && n.getValue() === this.getValue();\n    }\n\n    // isEqual(n: any){\n    //     return this.equals(n);\n    // }\n\n    of(v: any){\n        return new Left(v);\n    }\n\n    ap(n: Left){\n        return this;\n    }\n\n    getValue(){\n        return _lefts.get(this);\n    }\n\n    map(f: Function){\n        return this;\n    }\n\n    bimap(f: Function, _:any){\n        return this.of(f(this.getValue()))\n    }\n\n    chain(f: Function){\n        return this;\n    }\n\n    isRight(){\n        return false;\n    }\n\n    isLeft(){\n        return true;\n    }\n\n    swap(){\n        return new Right(this.getValue());\n    }\n\n    toString(){\n        return `Left(${this.getValue()})`;\n    }\n\n    caseOf(o: {Left: Function}){\n        return o.Left ? o.Left() : throwError(\"Either: Expected Left!\");\n    }\n}\n\nconst _rights = new WeakMap();\nclass Right implements Setoid, BiFunctor, Monad, PatternMatch {\n\n    constructor(v: any){\n        _rights.set(this, v);\n    }\n\n    equals(j: Right){\n        return j.isRight && j.isRight() && j.getValue() === this.getValue();\n    }\n\n    // isEqual(n: any){\n    //     return this.equals(n);\n    // }\n\n    of(v: any){\n        return new Right(v);\n    }\n\n    ap(j: Right | Left): Right | Left{\n        if(!isFunction(this.getValue())) throwError(\"Either: Wrapped value is not a function\");\n        return j.map(this.getValue());\n    }\n\n    getValue(){\n        return _rights.get(this);\n    }\n\n    map(f: Function){\n        if(!isFunction(f)) throwError(\"Either: Expected a function\");\n        return new Right(f(this.getValue()));\n    }\n\n    bimap(_: any, f:Function){\n        return this.of(f(this.getValue()))\n    }\n\n    chain(f: Function){\n        if(!isFunction(f)) throwError(\"Either: Expected a function\");\n        return f(this.getValue());\n    }\n\n    isRight(){\n        return true;\n    }\n\n    isLeft(){\n        return false;\n    }\n\n    swap(){\n        return new Left(this.getValue());\n    }\n\n    toString(){\n        return `Right(${this.getValue()})`;\n    }\n\n    caseOf(o: {Right: Function}){\n        return o.Right ? o.Right(this.getValue()) : throwError(\"Either: Expected Right\");\n    }\n}\n\nconst Either = {\n    of: (v: any) => new Right(v),\n    Right: (v: any): Right => new Right(v),\n    Left: (v: any): Left => new Left(v),\n    fromNullable: (v: any): Right | Left => v ? new Right(v) : new Left(v),\n    withDefault: (def: any, v: any): Right => v ? new Right(v) : new Right(def),\n    swap: (e: Left | Right) => e.swap(),\n    try: (f: Function) => (...args: Array<any>) =>{\n        try {\n            return new Right(f.apply(null, args));\n        } catch (error) {\n            return new Left(error);\n        }\n    }\n    //catMaybes: (ar: Array<Right|Left>): Array<any> => ar.filter( m => m instanceof Right).map(m => m.getValue())\n    // partitionEithers: \n}\n\nexport default Either;","// import Functor from \"../implements/functor\";\n// import Monad from \"../implements/monad\";\n// import PatternMatch from \"../implements/patternmatch\";\nimport {Setoid, Monad, PatternMatch} from \"../interfaces\";\nimport {throwError, isFunction} from \"../functions/helpers\";\n\nclass Nothing implements Setoid, Monad, PatternMatch {\n\n    equals(n: Nothing){\n       return n instanceof Nothing\n    }\n\n    // isEqual(n: Nothing){\n    //     return this.equals(n);\n    // }\n\n    of(v: any){\n        return new Nothing();\n    }\n\n    ap(n: Nothing){\n        return this.of(n);\n    }\n\n    getValue(){\n        return null;\n    }\n\n    map(f: Function){\n        return this;\n    }\n\n    chain(f: Function){\n        return this\n    }\n\n    isJust(){\n        return false;\n    }\n\n    isNothing(){\n        return true;\n    }\n\n    toString(){\n        return \"Nothing()\";\n    }\n\n    caseOf(o: {Nothing: Function}){\n        return o.Nothing ? o.Nothing() : throwError(\"Maybe: Expected Nothing!\");\n    }\n}\n\nconst _justs = new WeakMap();\nclass Just implements Setoid, Monad, PatternMatch {\n\n    constructor(v: any){\n        _justs.set(this, v);\n    }\n\n    equals(j: Just){\n        return j instanceof Just && j.getValue() === this.getValue();\n    }\n\n    // isEqual(n: Just){\n    //     return this.equals(n);\n    // }\n\n    of(v: any){\n        return new Just(v);\n    }\n\n    ap(j: Just | Nothing): Just | Nothing{\n        if(!isFunction(this.getValue())) throwError(\"Maybe: Wrapped value is not a function\");\n        return j.map(this.getValue());\n    }\n\n    getValue(){\n        return _justs.get(this);\n    }\n\n    map(f: Function){\n        if(!isFunction(f)) throwError(\"Maybe: Expected a function\");\n        return new Just(f(this.getValue()));\n    }\n\n    chain(f: Function){\n        if(!isFunction(f)) throwError(\"Maybe: Expected a function\");\n        return f(this.getValue());\n    }\n\n    isJust(){\n        return true;\n    }\n\n    isNothing(){\n        return false;\n    }\n\n    toString(){\n        return `Just(${this.getValue()})`;\n    }\n\n    caseOf(o: {Just: Function}){\n        return o.Just ? o.Just(this.getValue()) : throwError(\"Maybe: Expected Just\");\n    }\n}\n\nconst Maybe = {\n    of: (v: any) => new Just(v),\n    Just: (v: any): Just => new Just(v),\n    Nothing: (v: any): Nothing => new Nothing(),\n    fromNullable: (v: any): Just | Nothing => v ? new Just(v) : new Nothing(),\n    withDefault: (def: any, v: any): Just => v ? new Just(v) : new Just(def),\n    andThen: (cb: Function, m: Just | Nothing): Just | Nothing | Error => m instanceof Just ? cb.call(null, m.getValue()) : m instanceof Nothing ? m : throwError(\"Maybe: Unexpected Type\"),\n    catMaybes: (ar: Array<Just|Nothing>): Array<any> => ar.filter( m => m instanceof Just).map(m => m.getValue()),\n    isJust: (v: Just| Nothing) => v.isJust(),\n    isNothing: (v: Just| Nothing) => v.isNothing()\n}\n\nexport default Maybe;","\nimport {Monad, PatternMatch} from \"../interfaces\";\nimport {once, compose, throwError, isFunction} from \"../functions/helpers\";\n\nconst _tasks = new WeakMap();\nclass Task implements Monad {\n\n    constructor(f: Function/*, cancel: Function*/){\n        isFunction(f) ? _tasks.set(this, f) : throwError(\"Task: Expected a Function\");\n        //cancel && isFunction(cancel) ? _cancels.set(this, cancel) : _cancels.set(this, function(){})\n    }\n\n    fork(reject: Function, resolve: Function){\n        if(!isFunction(resolve) || !isFunction(reject)) throwError(\"Task: Reject and Resolve need to be functions\");\n        const fn = _tasks.get(this);\n        fn(reject, resolve);\n    }\n\n    of(v: any) {\n        return new Task((_: any, resolve: Function) => resolve(v));\n    }\n\n    toString(){\n        const fork = _tasks.get(this);\n        return `Task(${fork.toString()})`;\n    }\n\n    map(f: Function){\n        if(!isFunction(f)) throwError(\"Task: Expected a function\");\n        const fork = _tasks.get(this);\n        return new Task((rej: Function, res: Function) => fork(rej, compose(res, f)));\n    }\n\n    ap(t: Task){\n        if(!(t instanceof Task)) throwError(\"Task: type mismatch\");\n        const thisFork = _tasks.get(this);\n        let value: Array<any>;\n        let fn: Function;\n        let gotValues: boolean = false;\n        let gotFuction: boolean = false;\n        let rejected: boolean = false;\n\n        return new Task((rej: Function, res: Function) => {\n            const rejOnce = compose(() => {rejected = true;}, once)(rej);\n\n            const resolveBoth = () => {\n                if(gotValues && gotFuction && !rejected){\n                    const exec = compose(res, fn);\n                    exec.apply(null, value);\n                }\n            }\n\n            thisFork(rejOnce, (f: Function) => {\n                if(!isFunction(f)) throwError(\"Task: Wrapped value should be a function\");\n                fn = f;\n                gotFuction = true;\n                resolveBoth();\n            })\n\n            t.fork(rejOnce, (...values: Array<any>) => {\n                value = values;\n                gotValues = true;\n                resolveBoth();\n            });\n        })\n    }\n\n    chain(f: Function){\n        if(!isFunction(f)) throwError(\"Task: Function required\");\n        const thisFork = _tasks.get(this);\n\n        return new Task((rej: Function, res: Function) => {\n            thisFork(rej, (...args: Array<any>) => {\n                const t = f.call(null, args);\n                if(!(t instanceof Task)) throwError(\"Task: function must return another Task\");\n                t.fork(rej, res);\n            })\n        });\n    }\n    \n    toPromise(){\n        const thisFork = _tasks.get(this);\n        return new Promise((res, rej) => {\n            thisFork(rej, res);\n        });\n    }\n}\n\nexport default Task;","import TaskType from \"./task-type\"\n\nconst Task = (f: Function) => new TaskType(f);\n\nexport default Task;","import {\n    id,\n    once,\n    fmap,\n    bimap,\n    caseOf,\n    curry,\n    ncurry,\n    compose,\n    liftAn,\n    liftA1,\n    liftA2,\n    liftA3,\n    liftA4,\n    liftA5\n} from \"./functions/helpers\"\n\nimport Either from \"./data-types/either\";\nimport Maybe from \"./data-types/maybe\";\nimport Task from \"./data-types/task\";\n\n\n//Algebraic Data Types\n\nconst Kudo = {\n    id,\n    once,\n    fmap,\n    bimap,\n    caseOf,\n    curry,\n    ncurry,\n    compose,\n    liftAn,\n    liftA1,\n    liftA2,\n    liftA3,\n    liftA4,\n    liftA5,\n    Either,\n    Maybe,\n    Task\n};\n\nexport default Kudo;\n"],"names":["slice","Array","prototype","throwError","x","id","isFunction","f","once","_called","_result","undefined","_i","apply","args","curry","fn","arity","length","call","arguments","curried","concat","ncurry","ar","curArgs","Object","keys","diff","filter","indexOf","ar2","assign","compose","fns","reduce","g","_fmap","map","fmap","_bimap","f1","f2","b","bimap","_chain","m","chain","_caseOf","o","p","caseOf","_liftAn","init","res","rest","a","ca","ap","_liftA1","_liftA2","_liftA3","f3","_liftA4","f4","_liftA5","f5","liftAn","liftA1","liftA2","liftA3","liftA4","liftA5","_lefts","WeakMap","v","set","n","isLeft","getValue","Left","get","_","of","Right","_rights","j","isRight","Either","def","e","swap","error","Nothing","_justs","Just","Maybe","cb","isJust","isNothing","_tasks","reject","resolve","Task","fork","toString","rej","t","thisFork","value","gotValues","gotFuction","rejected","rejOnce","resolveBoth","exec","values","Promise","TaskType","Kudo"],"mappings":"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"}